[{"content":"My place to write about stuff\n","date":"3 July 2024","externalUrl":null,"permalink":"/posts/","section":"Posts","summary":"My place to write about stuff","title":"Posts","type":"posts"},{"content":"A place to write about my projects and the things I learnt while making them\n","date":"2 July 2024","externalUrl":null,"permalink":"/projects/","section":"Projects","summary":"A place to write about my projects and the things I learnt while making them","title":"Projects","type":"projects"},{"content":"","date":"30 June 2024","externalUrl":null,"permalink":"/","section":"home","summary":"","title":"home","type":"page"},{"content":"A website that can compliment and insult you, at the same time.\nHosted at: https://balance.ary82.dev\nary82/balance A website that can compliment and insult you, at the same time. Go 1 0 ","date":"26 June 2024","externalUrl":null,"permalink":"/projects/balance/","section":"Projects","summary":"A website that compliments and insults you at the same time","title":"Balance","type":"projects"},{"content":"","date":"26 June 2024","externalUrl":null,"permalink":"/categories/","section":"Categories","summary":"","title":"Categories","type":"categories"},{"content":"","date":"26 June 2024","externalUrl":null,"permalink":"/tags/go/","section":"Tags","summary":"","title":"Go","type":"tags"},{"content":"","date":"26 June 2024","externalUrl":null,"permalink":"/tags/htmx/","section":"Tags","summary":"","title":"HTMX","type":"tags"},{"content":"","date":"26 June 2024","externalUrl":null,"permalink":"/categories/project/","section":"Categories","summary":"","title":"Project","type":"categories"},{"content":"","date":"26 June 2024","externalUrl":null,"permalink":"/tags/real-time/","section":"Tags","summary":"","title":"Real-Time","type":"tags"},{"content":"","date":"26 June 2024","externalUrl":null,"permalink":"/tags/sse/","section":"Tags","summary":"","title":"SSE","type":"tags"},{"content":"","date":"26 June 2024","externalUrl":null,"permalink":"/tags/","section":"Tags","summary":"","title":"Tags","type":"tags"},{"content":"","date":"13 April 2024","externalUrl":null,"permalink":"/tags/algorithms/","section":"Tags","summary":"","title":"Algorithms","type":"tags"},{"content":"Huffbit is a command-line program written in Go that implements Huffman coding for data compression.\nary82/huffbit A huffman encoder/decoder written in Go Go 0 0 About # Huffman code is a type of optimal prefix code that supports lossless data compression by assigning variable length codes to the characters of a file. This algorithm assigns shorter codes to the most frequent characters, while comparatively uncommon characters receive larger codes, thus reducing file size optimally. This is accomplished by counting all the characters in a file, then constructing a Huffman Tree for assigning values to them. These codes are then written bit by bit to the output file. Features # Implements the classic Huffman coding algorithm. Supports compression and decompression of byte data. Leverages Go\u0026rsquo;s standard library packages for efficient file handling and data structures. Working # Take the input string \u0026ldquo;huffbit\u0026rdquo;:\nThis program makes the following Huffman tree:\nThe Codes for the characters are generated as:\nCharacter Code f 00 i 010 t 011 b 100 h 101 newline 110 u 111 After Writing the necessary headers, the encoded characters are written to the output file:\nAfter compression, the bytes needed get reduced from 8 in \u0026ldquo;huffbit\\n\u0026rdquo; to just 3 in the compressed file, making it a theoretical compression of 62%.\n","date":"13 April 2024","externalUrl":null,"permalink":"/projects/huffbit/","section":"Projects","summary":"Implementation of Huffman Algorithm in Go","title":"Huffbit","type":"projects"},{"content":"","date":"3 January 2024","externalUrl":null,"permalink":"/tags/javascript/","section":"Tags","summary":"","title":"JavaScript","type":"tags"},{"content":"","date":"3 January 2024","externalUrl":null,"permalink":"/tags/mern/","section":"Tags","summary":"","title":"MERN","type":"tags"},{"content":"A Public Messaging app with quirks, written in JavaScript.\nHosted at: https://okaychat.ary82.dev\nQuirks # Effortlessly acknowledge messages with a single keystroke. Pressing Enter with an empty message automatically sends the text \"Ok\"! Click on Generate with AI to send an AI generated message based on the last five messages of your conversation Supports Multiple Logins from same Account Frontend # The Front end for this project is written in React, while utilising the features of various libraries such as:\nRedux toolkit for state management Axios for API requests TailwindCSS for Styling ary82/okay-client A real time messaging webapp JavaScript 0 0 Backend # The Back end For this project is written in JavaScript, while utilising:\nSocket.io library for instant messaging MongoDB database for storing users, and messages and WebSocket rooms Calls to Google Gemini for Automatic Message Generation PassportJS for implementing User Authentication ary82/okay-api Back end for a messaging webapp JavaScript 0 0 Architecture/hosting # Here is a schematic representation of the project, showing the technologies and platforms used for hosting it:\n","date":"3 January 2024","externalUrl":null,"permalink":"/projects/okaychat/","section":"Projects","summary":"Messaging webapp written in JS","title":"Okaychat","type":"projects"},{"content":"","date":"3 January 2024","externalUrl":null,"permalink":"/tags/websockets/","section":"Tags","summary":"","title":"WebSockets","type":"tags"}]